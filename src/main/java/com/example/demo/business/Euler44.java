package com.example.demo.business;

import java.util.ArrayList;
import java.util.HashSet;

import com.example.demo.records.Euler;

public class Euler44 {
	public static Euler main() {
		return main(false);
	}

	public static Euler main(boolean isTest) {
		String problem = "<p>Pentagonal numbers are generated by the formula, $P_n=n(3n-1)/2$. The first ten pentagonal numbers are:\r\n"
				+ "$$1, 5, 12, 22, 35, 51, 70, 92, 117, 145, \\dots$$</p>\r\n"
				+ "<p>It can be seen that $P_4 + P_7 = 22 + 70 = 92 = P_8$. However, their difference, $70 - 22 = 48$, is not pentagonal.</p>\r\n"
				+ "<p>Find the pair of pentagonal numbers, $P_j$ and $P_k$, for which their sum and difference are pentagonal and $D = |P_k - P_j|$ is minimised; what is the value of $D$?</p>";
//		System.out.println(problem);
		String solution;

		if (isTest) {
			solution = solveProblem(10000);
		} else {
			solution = solveProblem(50000);
		}

		return new Euler(problem, solution);
	}

	/**
	 * @param primes
	 */
	private static String solveProblem(int limit) {
		ArrayList<Integer> pentagonalNumbers = new ArrayList<>();
		for (int i = 1; i <= limit; i++) {
			// Compute the current pentagon number using the formula p(n) = n * (3n-1)/2
			int currentPentagonalNumber = i * (3 * i - 1) / 2;
			pentagonalNumbers.add(currentPentagonalNumber);
		}

		HashSet<Integer> pentagonalSet = new HashSet<>(pentagonalNumbers);

		@SuppressWarnings("unused")
		int j = 0;
		@SuppressWarnings("unused")
		int k = 0;
		int minimalDifference = Integer.MAX_VALUE;

		for (int i = 0; i < pentagonalNumbers.size() - 1; i++) {
			int firstPentagonNumber = pentagonalNumbers.get(i);
			for (int ii = i + 1; ii < pentagonalNumbers.size(); ii++) {
				int secondPentagonNumber = pentagonalNumbers.get(ii);

				int sum = firstPentagonNumber + secondPentagonNumber;
				if (!pentagonalSet.contains(sum)) {
					continue;
				}

				int difference = secondPentagonNumber - firstPentagonNumber;
				if (!pentagonalSet.contains(difference) || 0 > difference) {
					continue;
				}

//				System.out.printf("DEBUG\n%d + %d = %d\n%d - %d = %d\n-----\n",
//						firstPentagonNumber, secondPentagonNumber, sum, secondPentagonNumber, firstPentagonNumber, difference);

				if (difference < minimalDifference) {
					j = firstPentagonNumber;
					k = secondPentagonNumber;
					minimalDifference = difference;
				}
			}
		}

		// Print the the pair of pentagon numbers for which their sum and difference is minimized
		String solution = String.valueOf(minimalDifference);
//		System.out.printf("%d + %d = %d\n%d - %d = %d\n-----\n", j, k, j + k, k, j, k - j);
//		PrimeGenerator.printList(pentagonalNumbers);

		return solution;
	}
}
